@model IndexAucViewModel
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Аукцион";
}
<div class="container row">
    <div class="sidenav col-lg-2" id="navbarCollapse">
        <ul class="navbar-nav mr-auto sidenav" id="navAccordion">
            @foreach (var cat in Model.Categories)
            {
                <li class="nav-item">
                    <a class="nav-link" asp-action="Index" asp-route-idCategory="@cat.CategoryId">@cat.Title (@cat.Lots.Count)</a>
                </li>
            }
        </ul>
    </div>
    <div class="col-lg-10">
        <div class="d-flex flex-row justify-content-lg-around auc-title">
            <h2>Текущие аукционы: </h2>
            @if (SignInManager.IsSignedIn(User))
            {
                <a asp-controller="Lots" asp-action="Create" class="btn btn-light">Добавить новый лот</a>
            }
        </div>
        <div class="lots flex-column">
            @foreach (var lot in Model.Lots)
            {
                var userFeedbacks = Model.Feedbacks.Where(f => f.UserId == lot.UserId);
                
                ViewData["raiting"] = userFeedbacks.Count() > 0 ? userFeedbacks.Average(f => f.Mark) : 0;
                @await Html.PartialAsync("_LotMiniComponent", lot, ViewData)
            }
        </div>
    </div>
</div>

